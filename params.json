{"name":"Fim","tagline":"File Integrity Manager","body":"# Fim\r\n\r\n## Table of contents\r\n\r\n  * [File Integrity Manager](#file-integrity-manager)\r\n  * [Fim workflow](#fim-workflow)\r\n  * [Fim usage](#fim-usage)\r\n  * [Simple example](#simple-example)\r\n  * [Real life example](#real-life-example)\r\n  * [License](https://github.com/evrignaud/fim/blob/master/LICENSE.md)\r\n\r\n## File Integrity Manager\r\n\r\nFim manage the integrity of a complete file tree.\r\n\r\nEnsuring the integrity of a files can be done in several ways. The two classical ways are:\r\n\r\n-  manage your files using a VCS or a DVCS.\r\n-  put all your file into an archive that will ensure the integrity of all the files.\r\n\r\nWhen you have gigabytes of videos or photos or other kind of binary files you cannot put all of them into a VCS or into an archive.\r\n\r\nThe solution provided by Fim is to manage an index of the files that contains for each file:\r\n\r\n- filename\r\n- file length\r\n- modification date\r\n- hash of the first four kilobytes of the file content\r\n- hash of the first megabyte of the file content\r\n- hash of the full file content\r\n\r\nThe hash algorithm that is used is SHA-512.\r\n\r\nThis index is called a `State` and acts like the Central Directory does for a Zip file.\r\nAll the data generated by Fim is stored into the `.fim` root directory.\r\n\r\nYou can use Fim to ensure the integrity of a big amount of data files.\r\nThis means having a clear status on files that have been removed, corrupted, modified, copied, renamed, duplicated.\r\nYou can also easily detect duplicates and remove them.\r\n\r\nFim does not keep track of the different contents of the files that are managed,\r\nthis is why we can call it an __Unversioned Control System (UVCS)__.\r\nFim keeps only each version of the different State that have been committed.\r\nYou cannot use them to retrieve the content of one file that you may have lost.\r\n\r\n> __Fim does not replace a backup software__\r\n\r\n[\\[^ TOC\\]](#table-of-contents)\r\n\r\n## Fim workflow\r\n\r\nFirst you need to initialize the Fim repository using the init command.\r\nThis will record the first State of your file tree.\r\n\r\n\t$ fim init\r\n\r\nThen you can compare the differences between the recorded State and the current file tree using the diff command.\r\nYou can do a full diff that will compare the hash of all the files. It can be very slow as all the files content will be read.\r\n\r\n\t$ fim diff\r\n\r\nYou can compare quickly asking to hash only the first megabyte of the files. **Using this option can produce an inaccurate result.**\r\n\r\n\t$ fim diff -m\r\n\r\nYou can compare quicker asking to hash only the first four kilobytes of the files. **Using this option can produce an inaccurate result.**\r\n\r\n\t$ fim diff -k\r\n\r\nOtherwise you can request to not hash file content using the fast mode (-f option). It will compare only the filenames and modification dates.\r\nYou will not be able to detect files that have been renamed or duplicated.\r\n\r\n\t$ fim diff -f\r\n\r\nEach time you want to record the State of the current file tree you can use the commit command.\r\nIt's a time consuming operation that will compute all the hash of each files content.\r\n\r\n\t$ fim ci\r\n\r\n[\\[^ TOC\\]](#table-of-contents)\r\n\r\n## Fim usage\r\n\r\n\t$ fim help\r\n\r\n\tusage: fim <command> [-a <arg>] [-c <arg>] [-f] [-h] [-k] [-l] [-m] [-q] [-t <arg>] [-v] [-y]\r\n\r\n\tFile Integrity Checker\r\n\r\n\tAvailable commands:\r\n\t\t init                           Initialize a Fim repository\r\n\t\t ci / commit                    Commit the current directory State\r\n\t\t diff                           Compare the current directory State with the previous one\r\n\t\t rdates / reset-dates           Reset the file modification dates like it's stored in the last committed State\r\n\t\t fdup / find-duplicates         Find duplicated files\r\n\t\t rmirror / rm-mirrored-files    Remove mirrored files from local directory based on a master Fim repository\r\n\t\t log                            Display States log\r\n\t\t help                           Prints the Fim help\r\n\t\t version                        Prints the Fim version\r\n\r\n\tAvailable options:\r\n\t\t -a,--master-fim-repository <arg>   Fim repository directory that you want to use as master. Only for the remove\r\n\t\t\t\t\t\t\t\t\t\t\tmirrored files command\r\n\t\t -c,--comment <arg>                 Sets that State comment during commit\r\n\t\t -f,--fast-mode                     Do not hash file content. Use only filenames and modification dates\r\n\t\t -h,--help                          Prints the Fim help\r\n\t\t -k,--hash-only-first-four-kilo     Hash only the first four kilo of the files\r\n\t\t -l,--use-last-state                Use the last committed State\r\n\t\t -m,--hash-only-first-mega          Hash only the first mega of the files\r\n\t\t -q,--quiet                         Do not display details\r\n\t\t -t,--thread-count <arg>            Number of thread to use to hash files content in parallel\r\n\t\t -v,--version                       Prints the Fim version\r\n\t\t -y,--always-yes                    Always yes to every questions\r\n\r\n[\\[^ TOC\\]](#table-of-contents)\r\n\r\n## Simple example\r\n\r\nHere is a step by step example of Fim usage.\r\nFor the purpose of this example we use small files.\r\n\r\n##### Create a set of files\r\n\r\n```shell\r\n~$ mkdir sample\r\n\r\n~$ cd sample/\r\n\r\n# Creates 10 files\r\n~/sample$ for i in {01..10} ; do echo \"New File $i\" > file$i ; done\r\n\r\n~/sample$ ls -la\r\ntotal 48\r\ndrwxrwxr-x 2 4096 juil. 21 22:24 .\r\ndrwxrwxr-x 7 4096 juil. 20 22:00 ..\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file01\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file02\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file03\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file04\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file05\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file06\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file07\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file08\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file09\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file10\r\n```\r\n\r\n##### Initialize the Fim repository\r\n\r\n```shell\r\n~/sample$ fim init\r\n2015/07/21 22:25:02 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.2015/07/21 22:25:05 - Info  - Scanned 10 files (120 bytes), hashed 120 bytes bytes, during 00:00:03, using 2 thread\r\n\r\nAdded:            file01\r\nAdded:            file02\r\nAdded:            file03\r\nAdded:            file04\r\nAdded:            file05\r\nAdded:            file06\r\nAdded:            file07\r\nAdded:            file08\r\nAdded:            file09\r\nAdded:            file10\r\n\r\n10 added\r\n```\r\n\r\n##### A new `.fim` directory have been created\r\n\r\n```shell\r\n~/sample$ ls -la\r\ntotal 52\r\ndrwxrwxr-x 3 4096 juil. 21 22:25 .\r\ndrwxrwxr-x 7 4096 juil. 20 22:00 ..\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file01\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file02\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file03\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file04\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file05\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file06\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file07\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file08\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file09\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file10\r\ndrwxrwxr-x 3 4096 juil. 21 22:25 .fim\r\n```\r\n\r\n##### Do some modifications in the files\r\n\r\n```shell\r\n~/sample$ mkdir dir1\r\n\r\n~/sample$ mv file01 dir1\r\n\r\n# Change the file02 modification date\r\n~/sample$ touch file02\r\n\r\n~/sample$ cp file03 file11\r\n\r\n# Add content to file04\r\n~/sample$ echo foo >> file04\r\n\r\n~/sample$ cp file05 file12\r\n\r\n# Add content to file05\r\n~/sample$ echo bar >> file05\r\n\r\n~/sample$ rm file06\r\n\r\n# Create the new file13\r\n~/sample$ echo \"New File 13\" > file13\r\n\r\n~/sample$ ls -la\r\ntotal 60\r\ndrwxrwxr-x 4 4096 juil. 21 22:26 .\r\ndrwxrwxr-x 7 4096 juil. 20 22:00 ..\r\ndrwxrwxr-x 2 4096 juil. 21 22:25 dir1\r\n-rw-rw-r-- 1   12 juil. 21 22:25 file02\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file03\r\n-rw-rw-r-- 1   16 juil. 21 22:26 file04\r\n-rw-rw-r-- 1   16 juil. 21 22:26 file05\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file07\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file08\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file09\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file10\r\n-rw-rw-r-- 1   12 juil. 21 22:25 file11\r\n-rw-rw-r-- 1   12 juil. 21 22:26 file12\r\n-rw-rw-r-- 1   12 juil. 21 22:26 file13\r\ndrwxrwxr-x 3 4096 juil. 21 22:25 .fim\r\n\r\n~/sample$ ls -la dir1/\r\ntotal 12\r\ndrwxrwxr-x 2 4096 juil. 21 22:25 .\r\ndrwxrwxr-x 4 4096 juil. 21 22:26 ..\r\n-rw-rw-r-- 1   12 juil. 21 22:24 file01\r\n```\r\n\r\n##### Fim is able to detect all the modifications that have been done\r\n\r\n```shell\r\n~/sample$ fim diff\r\n2015/07/21 22:27:41 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.\r\n2015/07/21 22:27:44 - Info  - Scanned 12 files (152 bytes), hashed 152 bytes bytes, during 00:00:03, using 2 thread\r\n\r\nComparing with the last committed state from 2015/07/21 22:25:02\r\nComment: Initial State\r\n\r\nAdded:            file13\r\nCopied:           file12 \t(was file05)\r\nDuplicated:       file11 = file03\r\nDate modified:    file02 \t2015/07/21 22:24:08 -> 2015/07/21 22:25:55\r\nContent modified: file04 \t2015/07/21 22:24:08 -> 2015/07/21 22:26:07\r\nContent modified: file05 \t2015/07/21 22:24:08 -> 2015/07/21 22:26:15\r\nRenamed:          file01 -> dir1/file01\r\nDeleted:          file06\r\n\r\n1 added, 1 copied, 1 duplicated, 1 date modified, 2 content modified, 1 renamed, 1 deleted\r\n```\r\n\r\n##### Search for duplicated files\r\n\r\n```shell\r\n~/sample$ fim fdup\r\nSearching for duplicated files\r\n\r\n2015/07/21 22:28:07 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.\r\n2015/07/21 22:28:10 - Info  - Scanned 12 files (152 bytes), hashed 152 bytes bytes, during 00:00:03, using 2 thread\r\n\r\n1 duplicated files\r\n\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n- Duplicate set #1\r\n  file03 duplicated 1 times\r\n      file11\r\n\r\n```\r\n\r\n##### Commit the modifications\r\n\r\n```shell\r\n~/sample$ fim ci -c \"After modifications\"\r\n2015/07/21 22:28:38 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.\r\n2015/07/21 22:28:41 - Info  - Scanned 12 files (152 bytes), hashed 152 bytes bytes, during 00:00:03, using 2 thread\r\n\r\nComparing with the last committed state from 2015/07/21 22:25:02\r\nComment: Initial State\r\n\r\nAdded:            file13\r\nCopied:           file12 \t(was file05)\r\nDuplicated:       file11 = file03\r\nDate modified:    file02 \t2015/07/21 22:24:08 -> 2015/07/21 22:25:55\r\nContent modified: file04 \t2015/07/21 22:24:08 -> 2015/07/21 22:26:07\r\nContent modified: file05 \t2015/07/21 22:24:08 -> 2015/07/21 22:26:15\r\nRenamed:          file01 -> dir1/file01\r\nDeleted:          file06\r\n\r\n1 added, 1 copied, 1 duplicated, 1 date modified, 2 content modified, 1 renamed, 1 deleted\r\n\r\nDo you really want to commit (y/n/A)? y\r\n```\r\n\r\n##### Nothing is modified\r\n\r\n```shell\r\n~/sample$ fim diff\r\n2015/07/21 22:30:32 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.\r\n2015/07/21 22:30:35 - Info  - Scanned 12 files (152 bytes), hashed 152 bytes bytes, during 00:00:03, using 2 thread\r\n\r\nComparing with the last committed state from 2015/07/21 22:28:38\r\nComment: After modifications\r\n\r\nNothing modified\r\n```\r\n\r\n##### Display the Fim log\r\n\r\n```shell\r\n~/sample$ fim log\r\nState #1: 2015/07/21 22:25:02\r\n\tComment: Initial State\r\n\tContains 10 files\r\n\r\nState #2: 2015/07/21 22:28:38\r\n\tComment: After modifications\r\n\tContains 12 files\r\n\r\n```\r\n\r\n[\\[^ TOC\\]](#table-of-contents)\r\n\r\n## Real life example\r\n\r\nHere is the output of the initialization of a big Fim repository that contains 297 GB of photos and videos.\r\n**It takes 2 hours** to hash all the files content.\r\n\r\n```shell\r\n~/Photos_Videos$ fim init\r\n2015/07/20 23:07:28 - Info  - Scanning recursively local files, computing all hash, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.o#...........................................o@o...............OO.oO.......O.......................\r\n@....o.......oo......................o..................Oo..........................................\r\n......................................#.............................................................\r\noO........O........................@@...............................................................\r\n............................O...o........o.oo...o.o..o.................o........o...................\r\n....o.o................................Oo..oo..o@...........................o.......................\r\n.................................O...@..............................................................\r\n....................................................................................................\r\n...........o.......O@..............O@@.................O.o........@.........Oo........O@O..o......OO\r\n..@...O#o..o......o................@.........OO.....................................................\r\n...............o.........oo.o................................o...............o......................\r\n.........................oooooooo.ooo@..........................oooo................O...............\r\n...oo....OoOo..o....oO@@o@..O..........oO...o@oOO#@@@oo.@@o.o@O.....@@@@@@OO@@@@OO..@@#....OooO.....\r\n.........................Oo#oOOoo.O#O.....oo.....o.......oo........@oOO.@o....o................O....\r\n...@o#OoOO..@Oo.O.o........@o.............ooo@.o...............oO...................................\r\n....O..O.....Oo#oooooooo..oo@oo.ooo.oooooooooO@ooo#Ooo@Ooo.o.o.##@@ooooo@OoOOOo...o.O.@Ooooooooooooo\r\noooooOooo.ooooooOooooOOoo.######O@####oo#####oo...oooOoo...ooooooooooooo....o.@#@#@OOoooOo#ooooOOoo@\r\nooo#@#####ooo..#.##o@o.@@o##oooooooO.oooooo@##o#@....#oooo@oo#######o...o.ooooooo#oo@#ooO@###o#oooo#\r\nOooooooooooooooOoooooo....ooooooooo.#oooooo.oOOOooo....................o..ooo.........o.ooo.........\r\noo.o...........@o@o@oooO@##o.oooo#@##oo@ooo@##O##oOooooooooo###@##@............###OOoO#o###ooOoooo#o\r\noOoo@oo..o.oo...................o@#..o@ooo@@....................................................O...\r\n............o............ooooo..o.....................ooo.o........................ooo.....o.oo.....\r\n...............ooo....................oooooooooooooo.oo.oooooooooooo#oo#oooooooooooooooooooo........\r\n..oooo......o......o......o..................o...#.#####ooooooooOoOooooooooOooooooOOOOooOOOoOOooo###\r\n#@OooooooO#####oOoooOOOOOOOoOOOoooooooOooooooooooooo###ooooooooooo#@OoOOOOOOOOoooooooooooooooOOoo#oO\r\nooooooooooOOOoooooOooOOoOOOOooOOoOOOooOooOoooOoOOoooOoOoooOOOoOo##..................................\r\n..........................@oo......ooo.oooo@oooooooooOooooooooO##OOOOOoOOOOOOOOOOOOOO@###OOOoOOOOOO#\r\n@@OOOo...........................................................####@.ooo.o...o#ooooo@ooo..ooooo...\r\n.ooo.......................Oo........................oo..@.......O@......O..........................\r\n.....................................................@................@O............................\r\n..................................................##@.....................................#o#oooOooo\r\n.......#oO############################################################@##########o....ooooooooooo.oo\r\nooooo.oooo.o.oooooooooooo......ooooooooooooooooooooooo.oooooooooo.oooooooooooooooooooooooooooooooooo\r\no......oooooooooooooo....oooooooooooooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooo\r\noooooooo.o.ooo..ooo.ooooooooooo...oo.o....o..ooooo.ooo...o.ooooooooooooooooooo.ooooooooooooooooooooo\r\noooooooooo....oooo.ooooooooooooooooo....o....ooo...o.....oo............o.......o.oo.ooooooooooooo.oo\r\noooooooooooooooooooooooooooooooooo.oooooooooooooooo.ooooooooooooooooooooo.....oooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo..oo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooo#ooooooooooo..oo@...ooooo#o\r\n2015/07/21 01:11:54 - Info  - Scanned 41453 files (297 GB), hashed 297 GB bytes, during 02:04:25, using 2 thread\r\n\r\n... # File list is skipped as it is too long\r\n\r\n41453 added\r\n```\r\n\r\nI am able to check the differences very quickly using the `-k` option that will check only the first four kilobytes and **it take 4 minutes** :=).\r\n\r\n```shell\r\n~/Photos_Videos$ fim diff -k\r\n2015/07/21 08:49:21 - Info  - Scanning recursively local files, hashing only first four kilo, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.o#...........................................o@o...............OO.oO.......O.......................\r\n@....o.......oo......................o..................Oo..........................................\r\n......................................#.............................................................\r\noO........O........................@@...............................................................\r\n............................O...o........o.oo...o.o..o.................o........o...................\r\n....o.o................................Oo..oo..o@...........................o.......................\r\n.................................O...@..............................................................\r\n....................................................................................................\r\n...........o.......O@..............O@@.................O.o........@.........Oo........O@O..o......OO\r\n..@...O#o..o......o................@.........OO.....................................................\r\n...............o.........oo.o................................o...............o......................\r\n.........................oooooooo.ooo@..........................oooo................O...............\r\n...oo....OoOo..o....oO@@o@..O..........oO...o@oOO#@@@oo.@@o.o@O.....@@@@@@OO@@@@OO..@@#....OooO.....\r\n.........................Oo#oOOoo.O#O.....oo.....o.......oo........@oOO.@o....o................O....\r\n...@o#OoOO..@Oo.O.o........@o.............ooo@.o...............oO...................................\r\n....O..O.....Oo#oooooooo..oo@oo.ooo.oooooooooO@ooo#Ooo@Ooo.o.o.##@@ooooo@OoOOOo...o.O.@Ooooooooooooo\r\noooooOooo.ooooooOooooOOoo.######O@####oo#####oo...oooOoo...ooooooooooooo....o.@#@#@OOoooOo#ooooOOoo@\r\nooo#@#####ooo..#.##o@o.@@o##oooooooO.oooooo@##o#@....#oooo@oo#######o...o.ooooooo#oo@#ooO@###o#oooo#\r\nOooooooooooooooOoooooo....ooooooooo.#oooooo.oOOOooo....................o..ooo.........o.ooo.........\r\noo.o...........@o@o@oooO@##o.oooo#@##oo@ooo@##O##oOooooooooo###@##@............###OOoO#o###ooOoooo#o\r\noOoo@oo..o.oo...................o@#..o@ooo@@....................................................O...\r\n............o............ooooo..o.....................ooo.o........................ooo.....o.oo.....\r\n...............ooo....................oooooooooooooo.oo.oooooooooooo#oo#oooooooooooooooooooo........\r\n..oooo......o......o......o..................o...#.#####ooooooooOoOooooooooOooooooOOOOooOOOoOOooo###\r\n#@OooooooO#####oOoooOOOOOOOoOOOoooooooOooooooooooooo###ooooooooooo#@OoOOOOOOOOoooooooooooooooOOoo#oO\r\nooooooooooOOOoooooOooOOoOOOOooOOoOOOooOooOoooOoOOoooOoOoooOOOoOo##..................................\r\n..........................@oo......ooo.oooo@oooooooooOooooooooO##OOOOOoOOOOOOOOOOOOOO@###OOOoOOOOOO#\r\n@@OOOo...........................................................####@.ooo.o...o#ooooo@ooo..ooooo...\r\n.ooo.......................Oo........................oo..@.......O@......O..........................\r\n.....................................................@................@O............................\r\n..................................................##@.....................................#o#oooOooo\r\n.......#oO############################################################@##########o....ooooooooooo.oo\r\nooooo.oooo.o.oooooooooooo......ooooooooooooooooooooooo.oooooooooo.oooooooooooooooooooooooooooooooooo\r\no......oooooooooooooo....oooooooooooooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooo\r\noooooooo.o.ooo..ooo.ooooooooooo...oo.o....o..ooooo.ooo...o.ooooooooooooooooooo.ooooooooooooooooooooo\r\noooooooooo....oooo.ooooooooooooooooo....o....ooo...o.....oo............o.......o.oo.ooooooooooooo.oo\r\noooooooooooooooooooooooooooooooooo.oooooooooooooooo.ooooooooooooooooooooo.....oooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo..oo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooo#ooooooooooo..oo@...ooooo#o\r\n2015/07/21 08:53:47 - Info  - Scanned 41453 files (297 GB), hashed 161 MB bytes, during 00:04:25, using 2 thread\r\n\r\nComparing with the last committed state from 2015/07/20 23:07:28\r\nComment: Initial State\r\n\r\nNothing modified\r\n```\r\n\r\nThis quick diff can be inaccurate.\r\nTo increase accuracy, you can use the `-m` option. This result is more accurate,\r\nbut it cannot be completely accurate as only the hash of the first megabyte of the files are computed.\r\nThis time in my case, **it takes 20 minutes** to check the differences.\r\n\r\n```shell\r\n~/Photos_Videos$ fim diff -m\r\n2015/07/21 12:45:24 - Info  - Scanning recursively local files, hashing only first mega, using 2 thread\r\n    (Hash progress legend for files grouped 10 by 10: # > 200 MB, @ > 100 MB, O > 50 MB, o > 20 MB, . otherwise)\r\n.o#...........................................o@o...............OO.oO.......O.......................\r\n@....o.......oo......................o..................Oo..........................................\r\n......................................#.............................................................\r\noO........O........................@@...............................................................\r\n............................O...o........o.oo...o.o..o.................o........o...................\r\n....o.o................................Oo..oo..o@...........................o.......................\r\n.................................O...@..............................................................\r\n....................................................................................................\r\n...........o.......O@..............O@@.................O.o........@.........Oo........O@O..o......OO\r\n..@...O#o..o......o................@.........OO.....................................................\r\n...............o.........oo.o................................o...............o......................\r\n.........................oooooooo.ooo@..........................oooo................O...............\r\n...oo....OoOo..o....oO@@o@..O..........oO...o@oOO#@@@oo.@@o.o@O.....@@@@@@OO@@@@OO..@@#....OooO.....\r\n.........................Oo#oOOoo.O#O.....oo.....o.......oo........@oOO.@o....o................O....\r\n...@o#OoOO..@Oo.O.o........@o.............ooo@.o...............oO...................................\r\n....O..O.....Oo#oooooooo..oo@oo.ooo.oooooooooO@ooo#Ooo@Ooo.o.o.##@@ooooo@OoOOOo...o.O.@Ooooooooooooo\r\noooooOooo.ooooooOooooOOoo.######O@####oo#####oo...oooOoo...ooooooooooooo....o.@#@#@OOoooOo#ooooOOoo@\r\nooo#@#####ooo..#.##o@o.@@o##oooooooO.oooooo@##o#@....#oooo@oo#######o...o.ooooooo#oo@#ooO@###o#oooo#\r\nOooooooooooooooOoooooo....ooooooooo.#oooooo.oOOOooo....................o..ooo.........o.ooo.........\r\noo.o...........@o@o@oooO@##o.oooo#@##oo@ooo@##O##oOooooooooo###@##@............###OOoO#o###ooOoooo#o\r\noOoo@oo..o.oo...................o@#..o@ooo@@....................................................O...\r\n............o............ooooo..o.....................ooo.o........................ooo.....o.oo.....\r\n...............ooo....................oooooooooooooo.oo.oooooooooooo#oo#oooooooooooooooooooo........\r\n..oooo......o......o......o..................o...#.#####ooooooooOoOooooooooOooooooOOOOooOOOoOOooo###\r\n#@OooooooO#####oOoooOOOOOOOoOOOoooooooOooooooooooooo###ooooooooooo#@OoOOOOOOOOoooooooooooooooOOoo#oO\r\nooooooooooOOOoooooOooOOoOOOOooOOoOOOooOooOoooOoOOoooOoOoooOOOoOo##..................................\r\n..........................@oo......ooo.oooo@oooooooooOooooooooO##OOOOOoOOOOOOOOOOOOOO@###OOOoOOOOOO#\r\n@@OOOo...........................................................####@.ooo.o...o#ooooo@ooo..ooooo...\r\n.ooo.......................Oo........................oo..@.......O@......O..........................\r\n.....................................................@................@O............................\r\n..................................................##@.....................................#o#oooOooo\r\n.......#oO############################################################@##########o....ooooooooooo.oo\r\nooooo.oooo.o.oooooooooooo......ooooooooooooooooooooooo.oooooooooo.oooooooooooooooooooooooooooooooooo\r\no......oooooooooooooo....oooooooooooooooooooooooooooooooooooooo.oooooooooooooooooooooooooooooooooooo\r\noooooooo.o.ooo..ooo.ooooooooooo...oo.o....o..ooooo.ooo...o.ooooooooooooooooooo.ooooooooooooooooooooo\r\noooooooooo....oooo.ooooooooooooooooo....o....ooo...o.....oo............o.......o.oo.ooooooooooooo.oo\r\noooooooooooooooooooooooooooooooooo.oooooooooooooooo.ooooooooooooooooooooo.....oooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo..oo\r\noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\noooooooooooooooooo#ooooooooooo..oo@...ooooo#o\r\n2015/07/21 13:05:04 - Info  - Scanned 41453 files (297 GB), hashed 35 GB bytes, during 00:19:39, using 2 thread\r\n\r\nComparing with the last committed state from 2015/07/20 23:07:28\r\nComment: Initial State\r\n\r\nNothing modified\r\n```\r\n\r\nIf you want to be completely sure of the `diff` result you need to run a full hash of all the files content using the `fim diff` command without any option.\r\nThis time in my case, **it takes 2 hours** as for the `init` command.\r\n\r\nThere is also the fast mode using the `-f` option that do not hash file content. It helps to detect faster changes but only file names that have changed.\r\nThis time in my case, **it takes 3 seconds**.\r\n\r\n[\\[^ TOC\\]](#table-of-contents)","google":"UA-65608268-1","note":"Don't delete this file! It's used internally to help with page regeneration."}